// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace DataSummitDbModels
{
    public partial class AspNetUser
    {
        public AspNetUser()
        {
            AspNetUserClaims = new HashSet<AspNetUserClaim>();
            AspNetUserLogins = new HashSet<AspNetUserLogin>();
            AspNetUserRoles = new HashSet<AspNetUserRole>();
            UserInfos = new HashSet<UserInfo>();
        }

        [StringLength(50)]
        public string Id { get; set; }
        public int AccessFailedCount { get; set; }
        public string ConcurrencyStamp { get; set; }
        [StringLength(256)]
        public string Email { get; set; }
        public bool EmailConfirmed { get; set; }
        public bool LockoutEnabled { get; set; }
        public DateTimeOffset? LockoutEnd { get; set; }
        [StringLength(256)]
        public string NormalizedEmail { get; set; }
        [StringLength(256)]
        public string NormalizedUserName { get; set; }
        public string PasswordHash { get; set; }
        public string PhoneNumber { get; set; }
        public bool PhoneNumberConfirmed { get; set; }
        public string SecurityStamp { get; set; }
        public bool TwoFactorEnabled { get; set; }
        [StringLength(256)]
        public string UserName { get; set; }
        public bool? IsTrial { get; set; }
        [StringLength(30)]
        public string Title { get; set; }
        [StringLength(50)]
        public string FirstName { get; set; }
        [StringLength(63)]
        public string MiddleNames { get; set; }
        [StringLength(50)]
        public string Surname { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? DateOfBirth { get; set; }
        [StringLength(255)]
        public string PhotoPath { get; set; }
        [Column(TypeName = "image")]
        public byte[] Photo { get; set; }
        public byte? GenderId { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? CreatedDate { get; set; }
        [StringLength(50)]
        public string PositionTitle { get; set; }
        public byte? UserTypeId { get; set; }
        public int? CompanyId { get; set; }

        [ForeignKey("CompanyId")]
        [InverseProperty("AspNetUsers")]
        public virtual Company Company { get; set; }
        [ForeignKey("GenderId")]
        [InverseProperty("AspNetUsers")]
        public virtual Gender Gender { get; set; }
        [ForeignKey("UserTypeId")]
        [InverseProperty("AspNetUsers")]
        public virtual UserType UserType { get; set; }
        [InverseProperty("User")]
        public virtual ICollection<AspNetUserClaim> AspNetUserClaims { get; set; }
        [InverseProperty("User")]
        public virtual ICollection<AspNetUserLogin> AspNetUserLogins { get; set; }
        [InverseProperty("User")]
        public virtual ICollection<AspNetUserRole> AspNetUserRoles { get; set; }
        [InverseProperty("IdNavigation")]
        public virtual ICollection<UserInfo> UserInfos { get; set; }
    }
}