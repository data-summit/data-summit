/*
Deployment script for DataSummit

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "DataSummit"
:setvar DefaultFilePrefix "DataSummit"
:setvar DefaultDataPath "C:\Users\robert.blankson\AppData\Local\Microsoft\VisualStudio\SSDT"
:setvar DefaultLogPath "C:\Users\robert.blankson\AppData\Local\Microsoft\VisualStudio\SSDT"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = PRIMARY;
    END


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [dbo].[Address]...';


GO
CREATE TABLE [dbo].[Address] (
    [AddressId]   BIGINT        IDENTITY (1, 1) NOT NULL,
    [NumberName]  NVARCHAR (15) NULL,
    [Street]      NVARCHAR (63) NULL,
    [Street2]     NVARCHAR (63) NULL,
    [Street3]     NVARCHAR (63) NULL,
    [TownCity]    NCHAR (31)    NULL,
    [County]      NCHAR (31)    NULL,
    [CountryId]   SMALLINT      NOT NULL,
    [PostCode]    NVARCHAR (10) NULL,
    [CreatedDate] DATETIME      NULL,
    [UserId]      BIGINT        NULL,
    [CompanyId]   INT           NULL,
    [ProjectId]   INT           NULL,
    CONSTRAINT [PK_Address] PRIMARY KEY CLUSTERED ([AddressId] ASC)
);


GO
PRINT N'Creating [dbo].[AspNetRoleClaims]...';


GO
CREATE TABLE [dbo].[AspNetRoleClaims] (
    [Id]         INT            IDENTITY (1, 1) NOT NULL,
    [ClaimType]  NVARCHAR (MAX) NULL,
    [ClaimValue] NVARCHAR (MAX) NULL,
    [RoleId]     NVARCHAR (128) NOT NULL,
    CONSTRAINT [PK_AspNetRoleClaim] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[AspNetRoleClaims].[IX_AspNetRoleClaims_RoleId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AspNetRoleClaims_RoleId]
    ON [dbo].[AspNetRoleClaims]([RoleId] ASC);


GO
PRINT N'Creating [dbo].[AspNetRoles]...';


GO
CREATE TABLE [dbo].[AspNetRoles] (
    [Id]               NVARCHAR (128) NOT NULL,
    [ConcurrencyStamp] NVARCHAR (MAX) NULL,
    [Name]             NVARCHAR (256) NULL,
    [NormalizedName]   NVARCHAR (256) NULL,
    CONSTRAINT [PK_AspNetRole] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[AspNetRoles].[RoleNameIndex]...';


GO
CREATE NONCLUSTERED INDEX [RoleNameIndex]
    ON [dbo].[AspNetRoles]([NormalizedName] ASC);


GO
PRINT N'Creating [dbo].[AspNetUserClaims]...';


GO
CREATE TABLE [dbo].[AspNetUserClaims] (
    [Id]         INT            IDENTITY (1, 1) NOT NULL,
    [ClaimType]  NVARCHAR (MAX) NULL,
    [ClaimValue] NVARCHAR (MAX) NULL,
    [UserId]     BIGINT         NOT NULL,
    CONSTRAINT [PK_AspNetUserClaim] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[AspNetUserClaims].[IX_AspNetUserClaims_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AspNetUserClaims_UserId]
    ON [dbo].[AspNetUserClaims]([UserId] ASC);


GO
PRINT N'Creating [dbo].[AspNetUserLogins]...';


GO
CREATE TABLE [dbo].[AspNetUserLogins] (
    [LoginProvider]       NVARCHAR (128) NOT NULL,
    [ProviderKey]         NVARCHAR (128) NOT NULL,
    [ProviderDisplayName] NVARCHAR (MAX) NULL,
    [UserId]              BIGINT         NOT NULL,
    CONSTRAINT [PK_AspNetUserLogin] PRIMARY KEY CLUSTERED ([LoginProvider] ASC, [ProviderKey] ASC)
);


GO
PRINT N'Creating [dbo].[AspNetUserLogins].[IX_AspNetUserLogins_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AspNetUserLogins_UserId]
    ON [dbo].[AspNetUserLogins]([UserId] ASC);


GO
PRINT N'Creating [dbo].[AspNetUserRoles]...';


GO
CREATE TABLE [dbo].[AspNetUserRoles] (
    [UserId] BIGINT         NOT NULL,
    [RoleId] NVARCHAR (128) NOT NULL,
    CONSTRAINT [PK_AspNetUserRole] PRIMARY KEY CLUSTERED ([UserId] ASC, [RoleId] ASC)
);


GO
PRINT N'Creating [dbo].[AspNetUserRoles].[IX_AspNetUserRoles_RoleId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AspNetUserRoles_RoleId]
    ON [dbo].[AspNetUserRoles]([RoleId] ASC);


GO
PRINT N'Creating [dbo].[AspNetUserRoles].[IX_AspNetUserRoles_UserId]...';


GO
CREATE NONCLUSTERED INDEX [IX_AspNetUserRoles_UserId]
    ON [dbo].[AspNetUserRoles]([UserId] ASC);


GO
PRINT N'Creating [dbo].[AspNetUsers]...';


GO
CREATE TABLE [dbo].[AspNetUsers] (
    [Id]                   BIGINT             IDENTITY (1, 1) NOT NULL,
    [AccessFailedCount]    INT                NOT NULL,
    [ConcurrencyStamp]     NVARCHAR (MAX)     NULL,
    [Email]                NVARCHAR (256)     NULL,
    [EmailConfirmed]       BIT                NOT NULL,
    [LockoutEnabled]       BIT                NOT NULL,
    [LockoutEnd]           DATETIMEOFFSET (7) NULL,
    [NormalizedEmail]      NVARCHAR (256)     NULL,
    [NormalizedUserName]   NVARCHAR (256)     NULL,
    [PasswordHash]         NVARCHAR (MAX)     NULL,
    [PhoneNumber]          NVARCHAR (MAX)     NULL,
    [PhoneNumberConfirmed] BIT                NOT NULL,
    [SecurityStamp]        NVARCHAR (MAX)     NULL,
    [TwoFactorEnabled]     BIT                NOT NULL,
    [UserName]             NVARCHAR (256)     NULL,
    [FirstName]            NVARCHAR (50)      NOT NULL,
    [Surname]              NVARCHAR (50)      NOT NULL,
    [PositionTitle]        NVARCHAR (50)      NOT NULL,
    [IsTrial]              BIT                NOT NULL,
    [GenderId]             INT                NOT NULL,
    [CreatedDate]          DATETIME           NULL,
    [DateOfBirth]          DATE               NOT NULL,
    CONSTRAINT [PK_AspNetUser] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[AspNetUsers].[EmailIndex]...';


GO
CREATE NONCLUSTERED INDEX [EmailIndex]
    ON [dbo].[AspNetUsers]([NormalizedEmail] ASC);


GO
PRINT N'Creating [dbo].[AspNetUsers].[UserNameIndex]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [UserNameIndex]
    ON [dbo].[AspNetUsers]([NormalizedUserName] ASC);


GO
PRINT N'Creating [dbo].[AspNetUserTokens]...';


GO
CREATE TABLE [dbo].[AspNetUserTokens] (
    [UserId]        NVARCHAR (150) NOT NULL,
    [LoginProvider] NVARCHAR (150) NOT NULL,
    [Name]          NVARCHAR (150) NOT NULL,
    [Value]         NVARCHAR (MAX) NULL,
    CONSTRAINT [PK_AspNetUserToken] PRIMARY KEY CLUSTERED ([UserId] ASC, [LoginProvider] ASC, [Name] ASC)
);


GO
PRINT N'Creating [dbo].[AzureCompanyResourceUrl]...';


GO
CREATE TABLE [dbo].[AzureCompanyResourceUrl] (
    [AzureCompanyResourceUrlId] BIGINT         IDENTITY (1, 1) NOT NULL,
    [Name]                      NVARCHAR (255) NOT NULL,
    [URL]                       NVARCHAR (511) NOT NULL,
    [Key]                       NVARCHAR (511) NOT NULL,
    [ResourceType]              NVARCHAR (63)  NOT NULL,
    [CompanyId]                 INT            NOT NULL,
    CONSTRAINT [PK_AzureCompanyResourceUrlId] PRIMARY KEY CLUSTERED ([AzureCompanyResourceUrlId] ASC)
);


GO
PRINT N'Creating [dbo].[BlockPosition]...';


GO
CREATE TABLE [dbo].[BlockPosition] (
    [BlockPositionId] TINYINT       IDENTITY (1, 1) NOT NULL,
    [Name]            NVARCHAR (15) NOT NULL,
    [CreatedDate]     DATETIME      NULL,
    [UserId]          BIGINT        NULL,
    CONSTRAINT [PK_BlockPosition] PRIMARY KEY CLUSTERED ([BlockPositionId] ASC)
);


GO
PRINT N'Creating [dbo].[Category]...';


GO
CREATE TABLE [dbo].[Category] (
    [CategoryId]  INT           IDENTITY (1, 1) NOT NULL,
    [Name]        NVARCHAR (15) NOT NULL,
    [Description] NTEXT         NULL,
    [Picture]     IMAGE         NULL,
    [CreatedDate] DATETIME      NULL,
    [UserId]      BIGINT        NULL,
    CONSTRAINT [PK_Category] PRIMARY KEY CLUSTERED ([CategoryId] ASC)
);


GO
PRINT N'Creating [dbo].[Company]...';


GO
CREATE TABLE [dbo].[Company] (
    [CompanyId]     INT             IDENTITY (1, 1) NOT NULL,
    [Name]          NVARCHAR (40)   NOT NULL,
    [CompanyNumber] CHAR (8)        NULL,
    [VATNumber]     CHAR (9)        NULL,
    [CreatedDate]   DATETIME        NULL,
    [UserId]        BIGINT          NULL,
    [Website]       NVARCHAR (2083) NULL,
    CONSTRAINT [PK_Company] PRIMARY KEY CLUSTERED ([CompanyId] ASC)
);


GO
PRINT N'Creating [dbo].[Country]...';


GO
CREATE TABLE [dbo].[Country] (
    [CountryId]        SMALLINT       NOT NULL,
    [ISO]              CHAR (3)       NOT NULL,
    [Name]             NVARCHAR (127) NOT NULL,
    [SentenceCaseName] NVARCHAR (127) NOT NULL,
    [ISO3]             CHAR (3)       NULL,
    [numcode]          SMALLINT       NULL,
    [phonecode]        INT            NOT NULL,
    [CreatedDate]      DATETIME       NULL,
    [UserId]           BIGINT         NULL,
    CONSTRAINT [PK_Country] PRIMARY KEY CLUSTERED ([CountryId] ASC)
);


GO
PRINT N'Creating [dbo].[Currency]...';


GO
CREATE TABLE [dbo].[Currency] (
    [CurrencyId]     SMALLINT       IDENTITY (1, 1) NOT NULL,
    [Entity]         NVARCHAR (100) NOT NULL,
    [Name]           NVARCHAR (100) NOT NULL,
    [AlphabeticCode] CHAR (3)       NOT NULL,
    [NumericCode]    CHAR (3)       NULL,
    [MinorUnit]      CHAR (1)       NULL,
    [IsFundYesNo]    BIT            NOT NULL,
    [CreatedDate]    DATETIME       NULL,
    [UserId]         BIGINT         NULL,
    CONSTRAINT [PK_Currency] PRIMARY KEY CLUSTERED ([CurrencyId] ASC)
);


GO
PRINT N'Creating [dbo].[Drawing]...';


GO
CREATE TABLE [dbo].[Drawing] (
    [DrawingId]          BIGINT          IDENTITY (1, 1) NOT NULL,
    [FileName]           NVARCHAR (1023) NOT NULL,
    [BlobUrl]            NVARCHAR (1023) NOT NULL,
    [ContainerName]      NVARCHAR (36)   NOT NULL,
    [Success]            BIT             NOT NULL,
    [ProjectId]          INT             NOT NULL,
    [ProfileVersionId]   INT             NOT NULL,
    [AzureConfidence]    DECIMAL (3, 2)  NULL,
    [GoogleConfidence]   DECIMAL (3, 2)  NULL,
    [AmazonConfidence]   DECIMAL (3, 2)  NULL,
    [PaperSizeId]        TINYINT         NULL,
    [PaperOrientationId] TINYINT         NOT NULL,
    [Processed]          BIT             NOT NULL,
    [CreatedDate]        DATETIME        NULL,
    [UserId]             BIGINT          NULL,
    [Type]               NVARCHAR (7)    NULL,
    CONSTRAINT [PK_Drawing] PRIMARY KEY CLUSTERED ([DrawingId] ASC)
);


GO
PRINT N'Creating [dbo].[DrawingFeature]...';


GO
CREATE TABLE [dbo].[DrawingFeature] (
    [DrawingFeatureId] BIGINT          IDENTITY (1, 1) NOT NULL,
    [Vendor]           NVARCHAR (255)  NOT NULL,
    [Value]            NVARCHAR (1023) NOT NULL,
    [DrawingId]        BIGINT          NOT NULL,
    [Left]             BIGINT          NULL,
    [Top]              BIGINT          NULL,
    [Width]            BIGINT          NULL,
    [Height]           BIGINT          NULL,
    [Feature]          TINYINT         NULL,
    [Center]           BIGINT          NULL,
    CONSTRAINT [PK_DrawingFeatureId] PRIMARY KEY CLUSTERED ([DrawingFeatureId] ASC)
);


GO
PRINT N'Creating [dbo].[DrawingLayer]...';


GO
CREATE TABLE [dbo].[DrawingLayer] (
    [DrawingLayerId] BIGINT          IDENTITY (1, 1) NOT NULL,
    [Name]           NVARCHAR (1023) NOT NULL,
    [DrawingId]      BIGINT          NOT NULL,
    CONSTRAINT [PK_DrawingLayerId] PRIMARY KEY CLUSTERED ([DrawingLayerId] ASC)
);


GO
PRINT N'Creating [dbo].[Employee]...';


GO
CREATE TABLE [dbo].[Employee] (
    [EmployeeId]      BIGINT         NOT NULL,
    [FirstName]       NVARCHAR (31)  NOT NULL,
    [MiddleNames]     NVARCHAR (63)  NULL,
    [Surname]         NVARCHAR (31)  NOT NULL,
    [Title]           NVARCHAR (51)  NULL,
    [TitleOfCourtesy] NVARCHAR (31)  NULL,
    [JobTitle]        NVARCHAR (63)  NULL,
    [BirthDate]       DATETIME       NULL,
    [HireDate]        DATETIME       NULL,
    [Notes]           NTEXT          NULL,
    [ReportsTo]       INT            NULL,
    [Photo]           IMAGE          NULL,
    [PhotoPath]       NVARCHAR (255) NULL,
    [GenderId]        TINYINT        NULL,
    [CreatedDate]     DATETIME       NULL,
    CONSTRAINT [PK_Employee] PRIMARY KEY CLUSTERED ([EmployeeId] ASC)
);


GO
PRINT N'Creating [dbo].[EmployeeTerritory]...';


GO
CREATE TABLE [dbo].[EmployeeTerritory] (
    [EmployeeId]  INT           NOT NULL,
    [TerritoryId] NVARCHAR (20) NOT NULL,
    [CreatedDate] DATETIME      NULL,
    [UserId]      BIGINT        NULL,
    CONSTRAINT [PK_EmployeeTerritory] PRIMARY KEY CLUSTERED ([EmployeeId] ASC, [TerritoryId] ASC)
);


GO
PRINT N'Creating [dbo].[Gender]...';


GO
CREATE TABLE [dbo].[Gender] (
    [GenderId]    TINYINT       NOT NULL,
    [Type]        NVARCHAR (15) NOT NULL,
    [CreatedDate] DATETIME      NULL,
    [UserId]      BIGINT        NULL,
    CONSTRAINT [PK_Gender] PRIMARY KEY CLUSTERED ([GenderId] ASC)
);


GO
PRINT N'Creating [dbo].[GoogleLanguage]...';


GO
CREATE TABLE [dbo].[GoogleLanguage] (
    [GoogleLanguageId] TINYINT        NOT NULL,
    [Name]             NVARCHAR (15)  NOT NULL,
    [Code]             NCHAR (3)      NOT NULL,
    [Notes]            NVARCHAR (127) NULL,
    CONSTRAINT [PK_GoogleLanguage] PRIMARY KEY CLUSTERED ([GoogleLanguageId] ASC)
);


GO
PRINT N'Creating [dbo].[ImageGrid]...';


GO
CREATE TABLE [dbo].[ImageGrid] (
    [ImageGridId] BIGINT          IDENTITY (1, 1) NOT NULL,
    [Name]        NVARCHAR (MAX)  NOT NULL,
    [WidthStart]  INT             NOT NULL,
    [HeightStart] INT             NOT NULL,
    [Width]       INT             NOT NULL,
    [Height]      INT             NOT NULL,
    [BlobURL]     NVARCHAR (2083) NOT NULL,
    [Processed]   BIT             NOT NULL,
    [Type]        TINYINT         NOT NULL,
    [DrawingId]   BIGINT          NOT NULL,
    CONSTRAINT [PK_ImageGrid] PRIMARY KEY CLUSTERED ([ImageGridId] ASC)
);


GO
PRINT N'Creating [dbo].[Order]...';


GO
CREATE TABLE [dbo].[Order] (
    [OrderId]        INT           IDENTITY (1, 1) NOT NULL,
    [CompanyId]      INT           NULL,
    [EmployeeId]     INT           NULL,
    [OrderDate]      DATETIME      NULL,
    [RequiredDate]   DATETIME      NULL,
    [ShippedDate]    DATETIME      NULL,
    [ShipVia]        INT           NULL,
    [Freight]        MONEY         NULL,
    [ShipName]       NVARCHAR (40) NULL,
    [ShipAddress]    NVARCHAR (60) NULL,
    [ShipCity]       NVARCHAR (15) NULL,
    [ShipRegion]     NVARCHAR (15) NULL,
    [ShipPostalCode] NVARCHAR (10) NULL,
    [ShipCountry]    NVARCHAR (15) NULL,
    [CreatedDate]    DATETIME      NULL,
    [UserId]         BIGINT        NULL,
    CONSTRAINT [PK_Order] PRIMARY KEY CLUSTERED ([OrderId] ASC)
);


GO
PRINT N'Creating [dbo].[OrderDetail]...';


GO
CREATE TABLE [dbo].[OrderDetail] (
    [OrderId]     INT      NOT NULL,
    [ProductId]   INT      NOT NULL,
    [UnitPrice]   MONEY    NOT NULL,
    [Quantity]    SMALLINT NOT NULL,
    [Discount]    REAL     NOT NULL,
    [CreatedDate] DATETIME NULL,
    [UserId]      BIGINT   NULL,
    CONSTRAINT [PK_Order_Detail] PRIMARY KEY CLUSTERED ([OrderId] ASC, [ProductId] ASC)
);


GO
PRINT N'Creating [dbo].[PaperOrientation]...';


GO
CREATE TABLE [dbo].[PaperOrientation] (
    [PaperOrientationId] TINYINT      NOT NULL,
    [Orientation]        NVARCHAR (9) NOT NULL,
    PRIMARY KEY CLUSTERED ([PaperOrientationId] ASC)
);


GO
PRINT N'Creating [dbo].[PaperSize]...';


GO
CREATE TABLE [dbo].[PaperSize] (
    [PaperSizeId]    TINYINT        IDENTITY (1, 1) NOT NULL,
    [Name]           NVARCHAR (31)  NOT NULL,
    [PixelWidth]     INT            NOT NULL,
    [PixelHeight]    INT            NOT NULL,
    [PhysicalWidth]  DECIMAL (6, 1) NULL,
    [PhysicalHeight] DECIMAL (6, 1) NULL,
    CONSTRAINT [PK_PaperSize] PRIMARY KEY CLUSTERED ([PaperSizeId] ASC)
);


GO
PRINT N'Creating [dbo].[Point]...';


GO
CREATE TABLE [dbo].[Point] (
    [PointId]          BIGINT IDENTITY (1, 1) NOT NULL,
    [X]                BIGINT NOT NULL,
    [Y]                BIGINT NOT NULL,
    [DrawingFeatureId] BIGINT NOT NULL,
    CONSTRAINT [PK_PointId] PRIMARY KEY CLUSTERED ([PointId] ASC)
);


GO
PRINT N'Creating [dbo].[Product]...';


GO
CREATE TABLE [dbo].[Product] (
    [ProductId]       INT           IDENTITY (1, 1) NOT NULL,
    [Name]            NVARCHAR (63) NOT NULL,
    [SupplierId]      INT           NULL,
    [CategoryId]      INT           NULL,
    [QuantityPerUnit] NVARCHAR (31) NULL,
    [UnitPrice]       MONEY         NULL,
    [UnitsInStock]    SMALLINT      NULL,
    [UnitsOnOrder]    SMALLINT      NULL,
    [ReorderLevel]    SMALLINT      NULL,
    [Discontinued]    BIT           NOT NULL,
    [CreatedDate]     DATETIME      NULL,
    [UserId]          BIGINT        NULL,
    CONSTRAINT [PK_Product] PRIMARY KEY CLUSTERED ([ProductId] ASC)
);


GO
PRINT N'Creating [dbo].[ProfileAttribute]...';


GO
CREATE TABLE [dbo].[ProfileAttribute] (
    [ProfileAttributeId]  BIGINT         IDENTITY (1, 1) NOT NULL,
    [Name]                NVARCHAR (255) NOT NULL,
    [NameX]               INT            NOT NULL,
    [NameY]               INT            NOT NULL,
    [NameWidth]           SMALLINT       NOT NULL,
    [NameHeight]          SMALLINT       NOT NULL,
    [PaperSizeId]         TINYINT        NOT NULL,
    [BlockPositionId]     TINYINT        NOT NULL,
    [ProfileVersionId]    INT            NOT NULL,
    [CreatedDate]         DATETIME       NULL,
    [UserId]              BIGINT         NULL,
    [Value]               NVARCHAR (MAX) NULL,
    [ValueX]              INT            NULL,
    [ValueY]              INT            NULL,
    [ValueWidth]          SMALLINT       NULL,
    [ValueHeight]         SMALLINT       NULL,
    [StandardAttributeId] SMALLINT       NULL,
    CONSTRAINT [PK_ProfileAttribute] PRIMARY KEY CLUSTERED ([ProfileAttributeId] ASC)
);


GO
PRINT N'Creating [dbo].[ProfileVersion]...';


GO
CREATE TABLE [dbo].[ProfileVersion] (
    [ProfileVersionId] INT             IDENTITY (1, 1) NOT NULL,
    [Name]             NVARCHAR (1023) NOT NULL,
    [ProjectId]        INT             NOT NULL,
    [Image]            IMAGE           NULL,
    [Width]            INT             NULL,
    [Height]           INT             NULL,
    [CreatedDate]      DATETIME        NULL,
    [UserId]           BIGINT          NULL,
    [WidthOriginal]    INT             NULL,
    [HeightOriginal]   INT             NULL,
    [X]                INT             NULL,
    [Y]                INT             NULL,
    CONSTRAINT [PK_ProfileVersionId] PRIMARY KEY CLUSTERED ([ProfileVersionId] ASC)
);


GO
PRINT N'Creating [dbo].[Project]...';


GO
CREATE TABLE [dbo].[Project] (
    [ProjectId]       INT             IDENTITY (1, 1) NOT NULL,
    [Name]            NVARCHAR (1024) NOT NULL,
    [BlobStorageName] NVARCHAR (255)  NOT NULL,
    [BlobStorageKey]  NVARCHAR (255)  NOT NULL,
    [CompanyId]       INT             NOT NULL,
    [CreatedDate]     DATETIME        NOT NULL,
    [UserId]          BIGINT          NOT NULL,
    CONSTRAINT [PK_ProjectId] PRIMARY KEY CLUSTERED ([ProjectId] ASC)
);


GO
PRINT N'Creating [dbo].[Property]...';


GO
CREATE TABLE [dbo].[Property] (
    [PropertyId]         BIGINT           IDENTITY (1, 1) NOT NULL,
    [SentenceId]         UNIQUEIDENTIFIER NOT NULL,
    [ProfileAttributeId] BIGINT           NOT NULL,
    CONSTRAINT [PK_Property] PRIMARY KEY CLUSTERED ([PropertyId] ASC)
);


GO
PRINT N'Creating [dbo].[Rectangle]...';


GO
CREATE TABLE [dbo].[Rectangle] (
    [RectangleId] UNIQUEIDENTIFIER NOT NULL,
    [Height]      BIGINT           NOT NULL,
    [Left]        BIGINT           NOT NULL,
    [Top]         BIGINT           NOT NULL,
    [Width]       BIGINT           NOT NULL,
    [SentenceId]  UNIQUEIDENTIFIER NOT NULL,
    CONSTRAINT [PK_RectangleId] PRIMARY KEY CLUSTERED ([RectangleId] ASC)
);


GO
PRINT N'Creating [dbo].[Sentence]...';


GO
CREATE TABLE [dbo].[Sentence] (
    [SentenceId]  UNIQUEIDENTIFIER NOT NULL,
    [Words]       NVARCHAR (MAX)   NOT NULL,
    [RectangleId] UNIQUEIDENTIFIER NOT NULL,
    [Vendor]      NVARCHAR (63)    NOT NULL,
    [IsUsed]      BIT              NOT NULL,
    [Confidence]  DECIMAL (3, 2)   NULL,
    [DrawingId]   BIGINT           NOT NULL,
    CONSTRAINT [PK_SentenceId] PRIMARY KEY CLUSTERED ([SentenceId] ASC)
);


GO
PRINT N'Creating [dbo].[StandardAttribute]...';


GO
CREATE TABLE [dbo].[StandardAttribute] (
    [StandardAttributeId] SMALLINT       IDENTITY (1, 1) NOT NULL,
    [Name]                NVARCHAR (255) NOT NULL,
    CONSTRAINT [PK_StandardAttribute] PRIMARY KEY CLUSTERED ([StandardAttributeId] ASC)
);


GO
PRINT N'Creating [dbo].[TaskDuration]...';


GO
CREATE TABLE [dbo].[TaskDuration] (
    [TaskDurationId] BIGINT         IDENTITY (1, 1) NOT NULL,
    [Name]           NVARCHAR (255) NOT NULL,
    [TimeStamp]      DATETIME       NOT NULL,
    [DrawingId]      BIGINT         NOT NULL,
    CONSTRAINT [PK_TaskDurationId] PRIMARY KEY CLUSTERED ([TaskDurationId] ASC)
);


GO
PRINT N'Creating [dbo].[User]...';


GO
CREATE TABLE [dbo].[User] (
    [UserId]        BIGINT         IDENTITY (1, 1) NOT NULL,
    [PositionTitle] NVARCHAR (50)  NULL,
    [FirstName]     NVARCHAR (31)  NOT NULL,
    [Surname]       NVARCHAR (31)  NOT NULL,
    [MiddleNames]   NVARCHAR (63)  NULL,
    [Title]         NVARCHAR (30)  NULL,
    [PhotoPath]     NVARCHAR (255) NULL,
    [Photo]         IMAGE          NULL,
    [CompanyId]     INT            NULL,
    [GenderId]      TINYINT        NOT NULL,
    [IsTrial]       BIT            NOT NULL,
    [CreatedDate]   DATETIME       NULL,
    [UserTypeId]    TINYINT        NULL,
    [Id]            BIGINT         NULL,
    [DateOfBirth]   DATE           NOT NULL,
    CONSTRAINT [PK_User] PRIMARY KEY CLUSTERED ([UserId] ASC)
);


GO
PRINT N'Creating [dbo].[UserInfo]...';


GO
CREATE TABLE [dbo].[UserInfo] (
    [UserInfoId]     BIGINT        IDENTITY (1, 1) NOT NULL,
    [Value]          NVARCHAR (63) NOT NULL,
    [CreatedDate]    DATETIME      NULL,
    [UserId]         BIGINT        NULL,
    [UserInfoTypeId] TINYINT       NULL,
    CONSTRAINT [PK_UserInfo] PRIMARY KEY CLUSTERED ([UserInfoId] ASC)
);


GO
PRINT N'Creating [dbo].[UserInfoType]...';


GO
CREATE TABLE [dbo].[UserInfoType] (
    [UserInfoTypeId] TINYINT       IDENTITY (1, 1) NOT NULL,
    [Type]           NVARCHAR (63) NOT NULL,
    [CreatedDate]    DATETIME      NULL,
    [UserId]         BIGINT        NULL,
    CONSTRAINT [PK_UserInfoType] PRIMARY KEY CLUSTERED ([UserInfoTypeId] ASC)
);


GO
PRINT N'Creating [dbo].[UserType]...';


GO
CREATE TABLE [dbo].[UserType] (
    [UserTypeId]  TINYINT       NOT NULL,
    [Value]       NVARCHAR (15) NOT NULL,
    [CreatedDate] DATETIME      NOT NULL,
    CONSTRAINT [PK_UserType] PRIMARY KEY CLUSTERED ([UserTypeId] ASC)
);


GO
PRINT N'Creating unnamed constraint on [dbo].[AspNetUsers]...';


GO
ALTER TABLE [dbo].[AspNetUsers]
    ADD DEFAULT 1 FOR [IsTrial];


GO
PRINT N'Creating unnamed constraint on [dbo].[AspNetUsers]...';


GO
ALTER TABLE [dbo].[AspNetUsers]
    ADD DEFAULT 1 FOR [GenderId];


GO
PRINT N'Creating [dbo].[DF_Orders_Freight]...';


GO
ALTER TABLE [dbo].[Order]
    ADD CONSTRAINT [DF_Orders_Freight] DEFAULT ((0)) FOR [Freight];


GO
PRINT N'Creating [dbo].[DF_Order_Details_UnitPrice]...';


GO
ALTER TABLE [dbo].[OrderDetail]
    ADD CONSTRAINT [DF_Order_Details_UnitPrice] DEFAULT ((0)) FOR [UnitPrice];


GO
PRINT N'Creating [dbo].[DF_Order_Details_Quantity]...';


GO
ALTER TABLE [dbo].[OrderDetail]
    ADD CONSTRAINT [DF_Order_Details_Quantity] DEFAULT ((1)) FOR [Quantity];


GO
PRINT N'Creating [dbo].[DF_Order_Details_Discount]...';


GO
ALTER TABLE [dbo].[OrderDetail]
    ADD CONSTRAINT [DF_Order_Details_Discount] DEFAULT ((0)) FOR [Discount];


GO
PRINT N'Creating [dbo].[FK_Address_Company]...';


GO
ALTER TABLE [dbo].[Address]
    ADD CONSTRAINT [FK_Address_Company] FOREIGN KEY ([CompanyId]) REFERENCES [dbo].[Company] ([CompanyId]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Creating [dbo].[FK_Address_User]...';


GO
ALTER TABLE [dbo].[Address]
    ADD CONSTRAINT [FK_Address_User] FOREIGN KEY ([UserId]) REFERENCES [dbo].[User] ([UserId]);


GO
PRINT N'Creating [dbo].[FK_Address_Country]...';


GO
ALTER TABLE [dbo].[Address]
    ADD CONSTRAINT [FK_Address_Country] FOREIGN KEY ([CountryId]) REFERENCES [dbo].[Country] ([CountryId]) ON UPDATE CASCADE;


GO
PRINT N'Creating [dbo].[FK_Address_Project]...';


GO
ALTER TABLE [dbo].[Address]
    ADD CONSTRAINT [FK_Address_Project] FOREIGN KEY ([ProjectId]) REFERENCES [dbo].[Project] ([ProjectId]);


GO
PRINT N'Creating [dbo].[FK_AspNetRoleClaim_AspNetRole_RoleId]...';


GO
ALTER TABLE [dbo].[AspNetRoleClaims]
    ADD CONSTRAINT [FK_AspNetRoleClaim_AspNetRole_RoleId] FOREIGN KEY ([RoleId]) REFERENCES [dbo].[AspNetRoles] ([Id]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK_AspNetUserClaim_AspNetUser_UserId]...';


GO
ALTER TABLE [dbo].[AspNetUserClaims]
    ADD CONSTRAINT [FK_AspNetUserClaim_AspNetUser_UserId] FOREIGN KEY ([UserId]) REFERENCES [dbo].[AspNetUsers] ([Id]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK_AspNetUserLogin_AspNetUser_UserId]...';


GO
ALTER TABLE [dbo].[AspNetUserLogins]
    ADD CONSTRAINT [FK_AspNetUserLogin_AspNetUser_UserId] FOREIGN KEY ([UserId]) REFERENCES [dbo].[AspNetUsers] ([Id]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK_AspNetUserRole_AspNetRole_RoleId]...';


GO
ALTER TABLE [dbo].[AspNetUserRoles]
    ADD CONSTRAINT [FK_AspNetUserRole_AspNetRole_RoleId] FOREIGN KEY ([RoleId]) REFERENCES [dbo].[AspNetRoles] ([Id]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK_AspNetUserRole_AspNetUser_UserId]...';


GO
ALTER TABLE [dbo].[AspNetUserRoles]
    ADD CONSTRAINT [FK_AspNetUserRole_AspNetUser_UserId] FOREIGN KEY ([UserId]) REFERENCES [dbo].[AspNetUsers] ([Id]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK_AzureCompanyResourceUrl_Company]...';


GO
ALTER TABLE [dbo].[AzureCompanyResourceUrl]
    ADD CONSTRAINT [FK_AzureCompanyResourceUrl_Company] FOREIGN KEY ([CompanyId]) REFERENCES [dbo].[Company] ([CompanyId]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Creating [dbo].[FK_Drawing_Project]...';


GO
ALTER TABLE [dbo].[Drawing]
    ADD CONSTRAINT [FK_Drawing_Project] FOREIGN KEY ([ProjectId]) REFERENCES [dbo].[Project] ([ProjectId]);


GO
PRINT N'Creating [dbo].[FK_Drawing_PaperSize]...';


GO
ALTER TABLE [dbo].[Drawing]
    ADD CONSTRAINT [FK_Drawing_PaperSize] FOREIGN KEY ([PaperSizeId]) REFERENCES [dbo].[PaperSize] ([PaperSizeId]);


GO
PRINT N'Creating [dbo].[FK_Drawing_PaperOrientation]...';


GO
ALTER TABLE [dbo].[Drawing]
    ADD CONSTRAINT [FK_Drawing_PaperOrientation] FOREIGN KEY ([PaperOrientationId]) REFERENCES [dbo].[PaperOrientation] ([PaperOrientationId]);


GO
PRINT N'Creating [dbo].[FK_DrawingFeature_Drawing]...';


GO
ALTER TABLE [dbo].[DrawingFeature]
    ADD CONSTRAINT [FK_DrawingFeature_Drawing] FOREIGN KEY ([DrawingId]) REFERENCES [dbo].[Drawing] ([DrawingId]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Creating [dbo].[FK_DrawingLayer_Drawing]...';


GO
ALTER TABLE [dbo].[DrawingLayer]
    ADD CONSTRAINT [FK_DrawingLayer_Drawing] FOREIGN KEY ([DrawingId]) REFERENCES [dbo].[Drawing] ([DrawingId]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Creating [dbo].[FK_Employee_Gender]...';


GO
ALTER TABLE [dbo].[Employee]
    ADD CONSTRAINT [FK_Employee_Gender] FOREIGN KEY ([GenderId]) REFERENCES [dbo].[Gender] ([GenderId]);


GO
PRINT N'Creating [dbo].[FK_ImageGrid_Drawing]...';


GO
ALTER TABLE [dbo].[ImageGrid]
    ADD CONSTRAINT [FK_ImageGrid_Drawing] FOREIGN KEY ([DrawingId]) REFERENCES [dbo].[Drawing] ([DrawingId]);


GO
PRINT N'Creating [dbo].[FK_Order_Companies]...';


GO
ALTER TABLE [dbo].[Order]
    ADD CONSTRAINT [FK_Order_Companies] FOREIGN KEY ([CompanyId]) REFERENCES [dbo].[Company] ([CompanyId]);


GO
PRINT N'Creating [dbo].[FK_OrderDetail_Order]...';


GO
ALTER TABLE [dbo].[OrderDetail]
    ADD CONSTRAINT [FK_OrderDetail_Order] FOREIGN KEY ([OrderId]) REFERENCES [dbo].[Order] ([OrderId]);


GO
PRINT N'Creating [dbo].[FK_Center_DrawingFeature]...';


GO
ALTER TABLE [dbo].[Point]
    ADD CONSTRAINT [FK_Center_DrawingFeature] FOREIGN KEY ([DrawingFeatureId]) REFERENCES [dbo].[DrawingFeature] ([DrawingFeatureId]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Creating [dbo].[FK_ProfileAttribute_BlockPosition]...';


GO
ALTER TABLE [dbo].[ProfileAttribute]
    ADD CONSTRAINT [FK_ProfileAttribute_BlockPosition] FOREIGN KEY ([BlockPositionId]) REFERENCES [dbo].[BlockPosition] ([BlockPositionId]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Creating [dbo].[FK_ProfileAttribute_PaperSize]...';


GO
ALTER TABLE [dbo].[ProfileAttribute]
    ADD CONSTRAINT [FK_ProfileAttribute_PaperSize] FOREIGN KEY ([PaperSizeId]) REFERENCES [dbo].[PaperSize] ([PaperSizeId]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Creating [dbo].[FK_ProfileAttribute_ProfileVersion]...';


GO
ALTER TABLE [dbo].[ProfileAttribute]
    ADD CONSTRAINT [FK_ProfileAttribute_ProfileVersion] FOREIGN KEY ([ProfileVersionId]) REFERENCES [dbo].[ProfileVersion] ([ProfileVersionId]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Creating [dbo].[FK_ProfileAttribute_StandardAttribute]...';


GO
ALTER TABLE [dbo].[ProfileAttribute]
    ADD CONSTRAINT [FK_ProfileAttribute_StandardAttribute] FOREIGN KEY ([StandardAttributeId]) REFERENCES [dbo].[StandardAttribute] ([StandardAttributeId]);


GO
PRINT N'Creating [dbo].[FK_ProfileVersion_Project]...';


GO
ALTER TABLE [dbo].[ProfileVersion]
    ADD CONSTRAINT [FK_ProfileVersion_Project] FOREIGN KEY ([ProjectId]) REFERENCES [dbo].[Project] ([ProjectId]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Creating [dbo].[FK_Project_Company]...';


GO
ALTER TABLE [dbo].[Project]
    ADD CONSTRAINT [FK_Project_Company] FOREIGN KEY ([CompanyId]) REFERENCES [dbo].[Company] ([CompanyId]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Creating [dbo].[FK_Property_ProfileAttribute]...';


GO
ALTER TABLE [dbo].[Property]
    ADD CONSTRAINT [FK_Property_ProfileAttribute] FOREIGN KEY ([ProfileAttributeId]) REFERENCES [dbo].[ProfileAttribute] ([ProfileAttributeId]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Creating [dbo].[FK_Property_Sentence]...';


GO
ALTER TABLE [dbo].[Property]
    ADD CONSTRAINT [FK_Property_Sentence] FOREIGN KEY ([SentenceId]) REFERENCES [dbo].[Sentence] ([SentenceId]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Creating [dbo].[FK_Rectangle_Sentence]...';


GO
ALTER TABLE [dbo].[Rectangle]
    ADD CONSTRAINT [FK_Rectangle_Sentence] FOREIGN KEY ([SentenceId]) REFERENCES [dbo].[Sentence] ([SentenceId]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Creating [dbo].[FK_Sentence_Drawing]...';


GO
ALTER TABLE [dbo].[Sentence]
    ADD CONSTRAINT [FK_Sentence_Drawing] FOREIGN KEY ([DrawingId]) REFERENCES [dbo].[Drawing] ([DrawingId]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Creating [dbo].[FK_TaskDuration_Drawing]...';


GO
ALTER TABLE [dbo].[TaskDuration]
    ADD CONSTRAINT [FK_TaskDuration_Drawing] FOREIGN KEY ([DrawingId]) REFERENCES [dbo].[Drawing] ([DrawingId]);


GO
PRINT N'Creating [dbo].[FK_User_AspNetUser]...';


GO
ALTER TABLE [dbo].[User]
    ADD CONSTRAINT [FK_User_AspNetUser] FOREIGN KEY ([Id]) REFERENCES [dbo].[AspNetUsers] ([Id]);


GO
PRINT N'Creating [dbo].[FK_User_Company]...';


GO
ALTER TABLE [dbo].[User]
    ADD CONSTRAINT [FK_User_Company] FOREIGN KEY ([CompanyId]) REFERENCES [dbo].[Company] ([CompanyId]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Creating [dbo].[FK_User_UserType]...';


GO
ALTER TABLE [dbo].[User]
    ADD CONSTRAINT [FK_User_UserType] FOREIGN KEY ([UserTypeId]) REFERENCES [dbo].[UserType] ([UserTypeId]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Creating [dbo].[FK_User_Gender]...';


GO
ALTER TABLE [dbo].[User]
    ADD CONSTRAINT [FK_User_Gender] FOREIGN KEY ([GenderId]) REFERENCES [dbo].[Gender] ([GenderId]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Creating [dbo].[FK_UserInfo_UserInfoType]...';


GO
ALTER TABLE [dbo].[UserInfo]
    ADD CONSTRAINT [FK_UserInfo_UserInfoType] FOREIGN KEY ([UserInfoTypeId]) REFERENCES [dbo].[UserInfoType] ([UserInfoTypeId]);


GO
PRINT N'Creating [dbo].[FK_UserInfo_User]...';


GO
ALTER TABLE [dbo].[UserInfo]
    ADD CONSTRAINT [FK_UserInfo_User] FOREIGN KEY ([UserId]) REFERENCES [dbo].[User] ([UserId]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Creating [dbo].[CK_Birthdate]...';


GO
ALTER TABLE [dbo].[Employee]
    ADD CONSTRAINT [CK_Birthdate] CHECK ([BirthDate]<getdate());


GO
PRINT N'Creating [dbo].[CK_Discount]...';


GO
ALTER TABLE [dbo].[OrderDetail]
    ADD CONSTRAINT [CK_Discount] CHECK ([Discount]>=(0) AND [Discount]<=(1));


GO
PRINT N'Creating [dbo].[CK_Quantity]...';


GO
ALTER TABLE [dbo].[OrderDetail]
    ADD CONSTRAINT [CK_Quantity] CHECK ([Quantity]>(0));


GO
PRINT N'Creating [dbo].[CK_UnitPrice]...';


GO
ALTER TABLE [dbo].[OrderDetail]
    ADD CONSTRAINT [CK_UnitPrice] CHECK ([UnitPrice]>=(0));


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '28b2058c-c28f-49b5-a08b-8b46ca9d8108')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('28b2058c-c28f-49b5-a08b-8b46ca9d8108')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '9dbddb34-76dd-4630-8519-0e8ebc1faeb2')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('9dbddb34-76dd-4630-8519-0e8ebc1faeb2')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '8929e56f-a11d-4747-9052-e5ac5e89dd21')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('8929e56f-a11d-4747-9052-e5ac5e89dd21')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '45e89c45-be13-4bbd-b114-cf8d5d73a53a')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('45e89c45-be13-4bbd-b114-cf8d5d73a53a')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '1d9ad6e3-e795-47ac-9691-3817c00c629e')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('1d9ad6e3-e795-47ac-9691-3817c00c629e')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '01638d7b-8f64-4765-bff4-66e3259aa68b')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('01638d7b-8f64-4765-bff4-66e3259aa68b')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '13f44ae3-ddc3-4b79-bb1e-921cf3863239')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('13f44ae3-ddc3-4b79-bb1e-921cf3863239')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'ad36e721-19c9-44d7-b76f-8369e94a834e')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('ad36e721-19c9-44d7-b76f-8369e94a834e')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '17e11fcb-8a26-48b3-a075-eaa764d68ad8')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('17e11fcb-8a26-48b3-a075-eaa764d68ad8')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '89988c00-4c0c-41ee-9c6b-312bd6df0894')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('89988c00-4c0c-41ee-9c6b-312bd6df0894')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '57193362-3877-4190-aee7-c0b809195a12')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('57193362-3877-4190-aee7-c0b809195a12')

GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
